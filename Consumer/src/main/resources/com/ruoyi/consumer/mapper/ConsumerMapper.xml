<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.consumer.mapper.ConsumerMapper">

    <resultMap type="Consumer" id="ConsumerResult">
        <result property="id"    column="id"    />
        <result property="img"    column="img"    />
        <result property="name"    column="name"    />
        <result property="createDate"    column="create_date"    />
        <result property="updataDate"    column="updata_date"    />
        <result property="status"    column="status"    />
        <result property="phone"    column="phone"    />
    </resultMap>

    <sql id="selectConsumerVo">
        select id, img, name, create_date, updata_date, status, phone from consumer
    </sql>

    <select id="selectConsumerList" parameterType="Consumer" resultMap="ConsumerResult">
        <include refid="selectConsumerVo"/>
        <where>
            <if test="img != null  and img != ''"> and img = #{img}</if>
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="params.beginCreateDate != null and params.beginCreateDate != '' and params.endCreateDate != null and params.endCreateDate != ''"> and create_date between #{params.beginCreateDate} and #{params.endCreateDate}</if>
            <if test="params.beginUpdataDate != null and params.beginUpdataDate != '' and params.endUpdataDate != null and params.endUpdataDate != ''"> and updata_date between #{params.beginUpdataDate} and #{params.endUpdataDate}</if>
            <if test="status != null "> and status = #{status}</if>
        </where>
    </select>

    <select id="selectConsumerById" parameterType="Long" resultMap="ConsumerResult">
        <include refid="selectConsumerVo"/>
        where id = #{id}
    </select>

    <insert id="insertConsumer" parameterType="Consumer" useGeneratedKeys="true" keyProperty="id">
        insert into consumer
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="img != null">img,</if>
            <if test="name != null">name,</if>
            <if test="createDate != null">create_date,</if>
            <if test="updataDate != null">updata_date,</if>
            <if test="status != null">status,</if>
            <if test="phone != null">phone,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="img != null">#{img},</if>
            <if test="name != null">#{name},</if>
            <if test="createDate != null">#{createDate},</if>
            <if test="updataDate != null">#{updataDate},</if>
            <if test="status != null">#{status},</if>
            <if test="phone != null">#{phone},</if>
        </trim>
    </insert>

    <update id="updateConsumer" parameterType="Consumer">
        update consumer
        <trim prefix="SET" suffixOverrides=",">
            <if test="img != null">img = #{img},</if>
            <if test="name != null">name = #{name},</if>
            <if test="createDate != null">create_date = #{createDate},</if>
            <if test="updataDate != null">updata_date = #{updataDate},</if>
            <if test="status != null">status = #{status},</if>
            <if test="phone != null">phone = #{phone},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteConsumerById" parameterType="Long">
        delete from consumer where id = #{id}
    </delete>

    <delete id="deleteConsumerByIds" parameterType="String">
        delete from consumer where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>
